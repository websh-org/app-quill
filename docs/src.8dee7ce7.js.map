{"version":3,"sources":["../node_modules/@websh/remote-slave-port/remote-slave-port.mjs","../node_modules/@websh/web-shell-app/web-shell-app.mjs","manifest.json","index.js"],"names":["RemoteSlavePort","constructor","id","_port","_manifest","_commands","_handlers","_receive","cmd","args","rsvp","throw","command","res","call","result","transfer","concat","postMessage","re","error","console","log","message","String","data","_connect","ev","source","window","parent","port","manifest","removeEventListener","onmessage","addEventListener","m","on","fn","push","commands","cmds","i","trigger","event","WebShellApp","document","body","e","lastActiveElement","target","activeElement","requestIdleCallback","focus","module","exports","v","name","icon","description","version","license","homepage","repository","api","file","formats","jexcel","label","type","extension","encoding","new","open","save","sessionStorage","data1","table","getElementById","colHeaders","colWidths","columns","format","content","setData"],"mappings":";AAA6B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAtB,MAAMA,EACXC,YAAYC,GACLC,KAAAA,MAAQ,KACRC,KAAAA,UAAY,GACZC,KAAAA,UAAY,GACZC,KAAAA,UAAY,GAEXC,MAAAA,EAAW,OAASC,IAAAA,EAAKC,KAAAA,EAAMC,KAAAA,MAC/B,IAIE,GAHCF,GACEG,KAAAA,MAAM,0BAER,KAAKN,UAAUG,GAElB,YADIE,GAAM,KAAKC,MAAM,8BAA8B,CAACC,QAAQJ,KAGxDK,MAAAA,QAAY,KAAKR,UAAUG,GAAKM,KAAK,KAAKL,IACzCM,EAAQC,GAAY,GAAGC,OAAOJ,GAChCV,KAAAA,MAAMe,YAAY,CAAEH,OAAAA,EAAQI,GAAIT,GAAQM,GAC7C,MAAOI,GACPC,QAAQC,IAAI,YAAYF,GACnBjB,KAAAA,MAAMe,YAAY,CAAEE,MAAOA,EAAMA,OAAS,iBAAkBG,QAASH,EAAMG,SAAWC,OAAOJ,GAAQK,KAAKL,EAAMK,MAAQ,GAAIN,GAAIT,MAUnIgB,EAAYC,IACZA,EAAGC,SAAWC,OAAOC,QACpBH,EAAGF,MAASE,EAAGF,KAAKM,MAAyB,aAAhBJ,EAAGF,KAAKvB,KACrCC,KAAAA,MAAQwB,EAAGF,KAAKM,KAChB5B,KAAAA,MAAMe,YAAY,CAAGhB,CAAAA,GAAK,YAAa8B,SAAU,KAAK5B,YAC3DyB,OAAOI,oBAAoB,UAAWP,GACjCvB,KAAAA,MAAM+B,UAAYP,CAAAA,IACrBpB,EAASoB,EAAGF,UAIhBI,OAAOM,iBAAiB,UAAWT,GAGrCM,SAASI,GAEA,OADFhC,KAAAA,UAAYgC,EACV,KAGTC,GAAGV,EAAIW,GAGE,OAFFhC,KAAAA,UAAUqB,GAAM,KAAKrB,UAAUqB,IAAO,GACtCrB,KAAAA,UAAUqB,GAAIY,KAAKD,GACjB,KAGT1B,QAAQJ,EAAK8B,GAEJ,OADFjC,KAAAA,UAAUG,GAAO8B,EACf,KAETE,SAASC,GACF,IAAA,IAAIvC,KAAMuC,EAAM,KAAK7B,QAAQ6B,EAAKA,EAAKC,IAI9CC,QAAQC,EAAOnB,EAAO,IAEb,OADPM,KAAKb,YAAY,CAAE0B,MAAAA,EAAOnB,KAAAA,IACnB,KAGTd,MAAMS,EAAOK,EAAO,IACZ,KAAA,CAAEL,MAAAA,EAAOK,KAAAA,IAvEU,QAAA,gBAAA;;ACe7B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAfA,IAAA,EAAA,QAAA,4BACaoB,EAAc,IAAI7C,EAAJ,gBAAoB,eAc/C,QAAA,YAAA,EARA6C,EAAYjC,QAAQ,aAAa,WAAI,OAAA,IACrCiC,EAAYjC,QAAQ,YAAY,WAAI,OAAA,IAOpCiB,OAAOM,iBAAiB,OAAQ,WAC9BW,SAASC,KAAKZ,iBAAiB,QAAS,SAAAa,GACtCH,EAAYI,kBAAoBD,EAAEE,SAClC,GACFrB,OAAOM,iBAAiB,QAAS,SAAAa,GAC3BH,EAAYI,mBAAqBH,SAASK,gBAAkBL,SAASC,MACvEK,oBAAoB,WAAIP,OAAAA,EAAYI,kBAAkBI;;ACrB5DC,OAAOC,QAAQ,CAACC,EAAE,EAAEC,KAAK,SAASC,KAAK,WAAWC,YAAY,yCAAyCC,QAAQ,QAAQC,QAAQ,MAAMC,SAAS,iDAAiDC,WAAW,8CAA8CC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACC,MAAM,cAAcC,KAAK,mBAAmBC,UAAU,SAASC,SAAS,OAAOC,KAAI,EAAGC,MAAK,EAAGC,MAAK;;AC6BvX,aA7BA,IAAA,EAAA,QAAA,wBACA,EAAA,EAAA,QAAA,oBA4BA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1BArD,QAAQC,IAAIU,EAAZ,gBAIOH,OAAO8C,eAEd,IAAIC,EAAQ,CACV,CAAE,SAAU,GAAI,IAAM,UACtB,CAAE,SAAU,GAAI,GAAM,UACtB,CAAE,UAAW,GAAI,IAAM,UACvB,CAAE,UAAW,GAAI,IAAM,WAGzB/C,OAAOgD,MAAQV,OAAOrB,SAASgC,eAAe,UAAW,CACvDrD,KAAKmD,EACLG,WAAY,CAAE,UAAW,WAAY,QAAS,SAC9CC,UAAW,CAAE,IAAK,IAAK,IAAK,KAC5BC,QAAS,CACL,CAAEZ,KAAM,eAAgBzC,OAAO,CAAE,SAAS,UAAU,UAAU,UAAU,SAAS,UACjF,CAAEyC,KAAM,UACR,CAAEA,KAAM,UACR,CAAEA,KAAM,aAKdxB,EAAYb,YAAAA,SAASA,EAArB,SACCpB,QAAQ,YAAa,SAA0C,GAAvCsE,EAAAA,OAAQC,EAAAA,QAASd,EAAAA,KAAMC,EAAAA,UACvC,MAAA,OAER1D,QAAQ,YAAa,SAA2B,GAAxBsE,EAAAA,OAAQZ,EAAAA,UACxB,MAAA,KAER1D,QAAQ,WAAY,SAAsB,GAAVsE,EAAAA,OAGxB,OAFP7D,QAAQC,IAAI,CAACuD,MAAAA,QACbA,MAAMO,QAAQ,IACP","file":"src.8dee7ce7.js","sourceRoot":"../src","sourcesContent":["export class RemoteSlavePort {\n  constructor(id) {\n    this._port = null;\n    this._manifest = {};\n    this._commands = {};\n    this._handlers = {};\n\n    const _receive = async ({ cmd, args, rsvp }) => {\n      try {\n        if (!cmd) {\n          this.throw(\"slave-specify-command\");\n        }\n        if (!this._commands[cmd]) {\n          if (rsvp) this.throw(\"slave-command-not-supported\",{command:cmd});\n          return;\n        } \n        const res = await this._commands[cmd].call(this,args);\n        const [result, transfer] = [].concat(res);\n        this._port.postMessage({ result, re: rsvp }, transfer)\n      } catch (error) {\n        console.log(\"app error\",error)\n        this._port.postMessage({ error: error.error || \"command-failed\", message: error.message || String(error), data:error.data || {}, re: rsvp })\n      }\n    }\n\n    const _trigger = async (ev, data) => {\n      for (var h in this._handlers[ev]) {\n        this._handlers[ev][h](data);\n      }\n    }\n\n    const _connect = (ev) => {\n      if (ev.source !== window.parent) return;\n      if (!ev.data || !ev.data.port || !ev.data[id] === 'connect') return;\n      this._port = ev.data.port;\n      this._port.postMessage({ [id]: 'connected', manifest: this._manifest })\n      window.removeEventListener('message', _connect);\n      this._port.onmessage = ev => {\n        _receive(ev.data);\n      }\n    }\n\n    window.addEventListener('message', _connect);\n  }\n\n  manifest(m) {\n    this._manifest = m;\n    return this;\n  }\n\n  on(ev, fn) {\n    this._handlers[ev] = this._handlers[ev] || [];\n    this._handlers[ev].push(fn);\n    return this;\n  }\n\n  command(cmd, fn) {\n    this._commands[cmd] = fn;\n    return this;\n  }\n  commands(cmds) {\n    for (var id in cmds) this.command(cmds,cmds[i])\n    return;\n  }\n\n  trigger(event, data = {}) {\n    port.postMessage({ event, data });\n    return this;\n  }\n\n  throw(error, data = {}) {\n    throw { error, data }\n  }\n}\n","import { RemoteSlavePort } from \"@websh/remote-slave-port\";\nexport const WebShellApp = new RemoteSlavePort('SOUTH-TOOTH');\n\n/**\n * Apps can override these\n */\n\nWebShellApp.command('proc-close',()=>true);\nWebShellApp.command('proc-init',()=>true);\n\n/**\n * Autofocus - so we can switch between windows and keep the correct focus\n * TODO: Add opt-out option for this, which means that it should run when the\n * remote slave port is first connected.\n */\nwindow.addEventListener(\"load\", ()=> {\n  document.body.addEventListener('focus', e=>{\n    WebShellApp.lastActiveElement = e.target;\n  },true)\n  window.addEventListener('focus', e=>{\n    if (WebShellApp.lastActiveElement && document.activeElement === document.body) {\n      requestIdleCallback(()=>WebShellApp.lastActiveElement.focus())\n    }\n  }) \n})\n","module.exports={v:0,name:\"jExcel\",icon:\"icon.png\",description:\"jExcel spreadsheet editor for WebShell\",version:\"3.5.0\",license:\"ISC\",homepage:\"https://github.com/websh-org/app-jexcel#readme\",repository:\"https://github.com/websh-org/app-jexcel.git\",api:{file:{formats:{jexcel:{label:\"jexcel File\",type:\"application/json\",extension:\"jexcel\",encoding:\"text\",new:!0,open:!0,save:!0}}}}};","import { WebShellApp } from \"@websh/web-shell-app\";\nimport manifest from \"./manifest.json\";\n\nconsole.log(manifest)\n\n\n\ndelete window.sessionStorage ;\n\nvar data1 = [\n  [ 'Cheese', 10, 1.10, '=B1*C1'],\n  [ 'Apples', 30, 0.40, '=B2*C2'],\n  [ 'Carrots', 15, 0.45, '=B3*C3'],\n  [ 'Oranges', 20, 0.49, '=B4*C4'],\n];\n\nwindow.table = jexcel(document.getElementById('editor'), {\n  data:data1,\n  colHeaders: [ 'Product', 'Quantity', 'Price', 'Total' ],\n  colWidths: [ 300, 100, 100, 100 ],\n  columns: [\n      { type: 'autocomplete', source:[ 'Apples','Bananas','Carrots','Oranges','Cheese','Pears' ] },\n      { type: 'number' },\n      { type: 'number' },\n      { type: 'number' },\n  ]\n});\n\n\nWebShellApp.manifest(manifest)\n.command('file-open', ({ format, content, type, extension }) => {\n  return \"OK\";\n})\n.command('file-save', ({ format, extension }) => {\n  return {}\n})\n.command('file-new', function ({ format }) {\n  console.log({table})\n  table.setData([])\n  return \"OK\";\n})\n"]}